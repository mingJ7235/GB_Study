package day01;
//	이클립스 단축키
/*
 * 자동정렬 ctrl + shift + f
 * 
 */
//자바가 패키지를 기준으로 하는 이유 : 패키지 하나가 응용프로그램이기 때문이다. 


//함수와 메소드의 차이
//함수 : 어떠한 영역에도 갇혀있지 않다. 
//메소드 : 어떠한 영역내에서 선언 된다. 


public class MethodTest {
	
	//메소드는 저장공간이다. 머릿속에 박자! 저장공간이다. 변수도 저장공간이다 객체도 저장공간이다.
	//메소드도 역시 저장공간이다!  -> RAM에 할당이된다. 
	
	//RAM의 영역중 TEXT영역에 상수와 코드를 저장해놓는다. 
	//즉 메소드안에 작성한 소스코드는 RAM의 TEXT영역에 할당된다. 
	//그렇다면, 그 RAM에 할당된다면 무조건 주소값이 할당이된다. 
	//그러므로, 메소드를 호출하면 RAM에 저장된 주소로 가고, 그 주소로 가보니 코드가 있는 것임.
	//그래서 그 코드에 RETURN이 있다면 그 RETURN 값이 호출이 되는 것이다. 
	//※메소드는 저장공간이다 !! 
	
	//메소드는 반드시 메소드 바깥에서 선언하고, 사용은 메소드 안에서 한다. 
	
	//static
	//1. 가장먼저 메모리에 할당된다. 
	//-> main 메소드는 static 으로 선언되므로, 메소드를 사용할 때 소속을 알려줘야 사용할 수 있다. 
	
	public int add (int num1, int num2) {
		return num1 + num2;
	}
	
	public static void main(String[] args) {
		//String [] args 의 존재이유 : 네트워크와 관련이 있다. ip나 포트번호를 받는 것임 
		//args는 네트워크 관련 파라미터를 받는다. 
		
		//add 메소드가 호출되었을 때 내부 과정 (동작원리)
		System.out.println(new MethodTest().add(5, 9));
		
	}
}





