* 개발자는 소통하는 사람이다. 누구랑? os와 소통하는 것이다. 
항상 os와 소통한다는 것을 이야기하는것!
os는 하드웨어를 제어한다. 

쓰레드(Thread)
	프로그램
	: 소스코드로 잘 짜여진 틀

	프로세스
	:실행된 프로그램
	:운영체제로부터 시스템 자원을 할당받는 작업의 단위
	
	※자원 : os가 가지고있고, 프로그램을 실행할때마다 할당함
	
	자바에서는 운영체제대신 JVM과 소통하여 시스템자원을
	할당받는다. 
	

	쓰레드
	: 프로세스의 특정한 수행 경로
	-> 실행되고있는 프로그램(프로세스)의 
	각각의 작업의 경로	
	: 프로그램 처리 경로.
	: 전적으로 JVM에의해 스케쥴링 된다. 

쓰레드의 종류

1) 단일 쓰레드 (매표소)
	쓰레드가 하나. 
	작업이 여러개있어도 순차적으로 진행된다.
	처음 요청한것을 먼저 순차적으로 진행
	※매표소의 줄 을 예시로 들것 ! 
	장점 : 안정적이다. (하나 오류나면 하나만 고치면된다)
	      메모리 공간을 세이브할 수 있다. 
	단점 : 비효율 적일 수있다.

	직렬적이다.
	처리 경로는 한 개만 존재한다.
	매표소와 같이 앞의 작업이 완료 되어야 그 다음 작업이
	시작된다. 
	따라서 하나의 작업이 오래 걸리면 전체 작업속도가
	느려지게 된다.
	하지만 한 개의 작업에서 오류가 발생하면 다른 작업에 
	영향을 미치지 않기 때문에 안정적이고, 하나의 쓰레드 내에서
	모든 작업을 순차적으로 진행하기 때문에
	메모리를 절약할 수 있다. 

2) 멀티 쓰레드 (음식점)
	병렬적이다.
	여러개의 처리 경로를 가지게 되며,
	한 개의 처리 경로를 나누어 동시 작업이 가능하다.
	하나의 프로세스를 동시에 처리하는 것 처럼 보이지만
	사실은 매우 짧은 단위로 분할해서 차례로 처리한다.
	JSP, SpringFramework 웹서버가 대표적인
	멀티쓰레드 Application이다. 

	※모든 웹서버가 멀티스레드는 아니다!!
	(node는 단일쓰레드다)
	
	장점 : 효율적으로 작업을 활용한다.
	단점 : 안정성이 떨어진다. 	

※ 속도는 단일이든 멀티가 똑같다! 누가더 빠르다는 것은 다르다

	장점 : 효율성 증가, 처리량 증가, 처리비용 감소 (속도는절대아님!)
	단점 : 복잡하고 설계가 어려움, 자원 공유문제가 생김 (동기화문제)
	      한 개의 쓰레드 문제 발생 시 전부 문제 발생
	      교착상태 (Dead Lock)에 빠질 수있다. 
		->모든 스레드가 멈춰 있는 상태
	※그럼에도 불구하고 멀티 스레드를 사용하는 이유
		: 효율성, 처리량, 처리비용감소 효과가 매우 크기때문이다.


교착상태 (Dead Lock)
	멀티 쓰레드 중 쓰레드 간 대기 상태가 종료되지 않아서
	무한정 대기만 하는 비정상적인 상태

	오라클에서는 애플리케이션에 교착상태에 생기면 60초를 기준으로
	교착상태 판단 후 재시작 혹은 일부를 끊어준다.

	굉장히 위험한 상태다. 
	
멀티 쓰레드 구현 방법
	Thread 클래스 상속 (start()를 바로 사용할 수 있다)
	Runnable 인터페이스 지정 


--------------------------------------------------
인코딩
	완성형
		ex) 가각간...등등으로 다 기억해놓은거
		EUC-KR, MS949(EUC-KR을 업그레이드한 버전)
	조합형
		ex) 자음모음 하나씩 만들어놔서 조합
		UTF-8 -> 이게 전국적으로 쓰임 가변형이라서!
		메모리를 효율적으로 사용하면서 인코딩을 한다. 

--------------------------------------------------
동기화(Synchronized)
	자원공유에 문제가 있다. 그래서 나온게 동기화 !
	
	출금메소드가있을때 (이건 전체스레드에서 딱 하나의 자원)
	전체로봤을때는 멀티스레드인데 특정자원에서 조심해야할필요가있다.
	이때 이 자원에게 동기화를 걸어서 하나의쓰레드가 끝나야
	다음쓰레드가 작동하도록 하는것

	하나의 쓰레드가 자원을 사용하고 있을 때,
	다른 쓰레드가 동시에 같은 필드를 사용하지 못하게 막아주는 문법

	1. 동기화 키워드

	2. 동기화 블럭

※ 동기식 : javaScript가 대표적
		즉 단일 쓰레드로 이루어진 것이다. 
  비동기식 : Ajax가 대표적
		즉 멀티 쓰레드로 이루어진 것이다. 
		(인스타그램 같은거)
	a-synchronized java script xml 이 ajax다
	=> 즉 자바스크립트를 비동기로 쓴다는것 
	

동기화를 사용하는 이유 

1. 여러 스레드가 하나의 자원을 공유했을 때 연산 및 다양한 문제가 
발생할 수 있다. 이 때에는 동기화를 사용하여 쓰레드가 하나씩
접근하도록 막아준다. 

2. 각 스레드를 제어하기 위해서






		