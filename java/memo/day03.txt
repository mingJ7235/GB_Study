day03>

접근권한 제어자 (접근자)
(보안이라기보다 개발자들끼리의 경고, 약속 같은 느낌)
	자료형 앞에 작성하여 영역관리를 할 수 있다. 

	default : 다른 패키지에서 사용할 수 없다. 
	pubilc : 모든 곳에서 사용할 수 있다(패키지 안에서 메인클래스 앞에 작성한다) 
	protected : 다른 패키지에서 사용할 수 없다. (자식이면 사용가능)
	private : 다른 클래스에서 사용할 수 없다. 

왜 굳이 getter setter를 써서 private을 사용하는가? -> JSP를 배워야 제대로 이해가된다.
왜 직접 접근을 막는가?

private을 사용하는 이유는 반드시 getter()와 setter()를 만들라는 경고다. 

jsp에서 변수를 호출할때 테그로 가는데 직접 호출하는 방법이없고,
메소드로만 호출 할 수 있다. 
그렇기 때문에, 화면단에서 쓰려면 getter(), setter()라는 메소드를 써야한다!
라고 경고를 해주기위해서 private을 사용하는 것이다. (자바빈즈 규칙)

-----------------------------------------------
추상클래스>
원래 클래스는 추상적이다.
하지만 보통 클래스는 필드들은 구체적으로 구현이 되어있다 (중괄호가있다.)

하지만 추상클래스는 필드들도 추상적이다.
	즉, 추상 메소드가 있다는 것이다.

추상메소드
	{} 바디가 존재하지 않는다. 즉 구현이 되어있지 않다. 
	세부적인 내용들이 정의되어 있지 않은 상태이다.

추상클래스 (불완전한 클래스)
	추상메소드가 한 개 이상이상 포함이 된다면, 클래스는 추상클래스로 선언해야한다.
	추상 메소드가 구체적으로 구현되기 전까지 메모리에 할당이될수가 없다. 
	구체적인 내용은 하위 클래스에서 재정의하여 구현한다. 
	자식에서는 반드시 구현해야 하기 때문에 이를 강제성이라고 한다. 
	(추상클래스는 클래스이기때문에 당연히 일반 메소드도 가질수있다)

추상클래스 선언
	abstract class 추상클래스명 {
		abstract 리턴타입 추상메소드명 ();
	}

---------------------------------------------
인터페이스 (틀)
	재사용의 목적에 특화되어있다. 
	추상 클래스를 고도화 시킨 문법이다. 
	반드시 추상메소드와 상수만 선언해야 한다. 

	다른 클래스에서 인터페이스를 지정받을 때 implements를 사용한다. 
	인터페이스는 여러 개를 지정받을 수 있다. 
	지정받은 자식 클래스에서는 인터페이스가 가지고 있는 추상 메소드를
	반드시 재정의 해야한다. 
	인터페이스는 강제성이 강하다! (모든메소드가 추상메소드기때문이다.)

	jdk 1.8버전 이후로 인터페이스에서 default 메소드를 선언할 수 있다. 
	즉, 바디가 있는 메소드를 인터페이스에서 선언 가능

	jdk1.8인터페이스에서 default메소드를 선언할 수 있기 때문에,
	사실상 다중 상속을 지원하게 되는 것이다. 

	1)인터페이스끼리 모호성이 발생하면,
		-> 지정받은 클래스에서 재정의를(override)를 통해 해결한다.
	2)부모 클래스와 인터페이스가 모호성이 발생하면,
		->  부모클래스가 먼저 적용이된다. 


다중상속
	하나의 자식이 여러 부모를 상속받는 기법.

	일단은, 자바에서 모호성때문에 다중상속을 지원하지 않는다.
	하지만 인터페이스를 통해서 다중상속을 지원 받을 수있다. 
	
	여러 부모 클래스에 같은 이름의 필드가 있고, 이를 자식 클래스에서 사용했을 경우
	어떤 부모의 필드인지 알 수 없기 때문에 문제가 발생한다. 
	이를 모호성이라고 한다. 모호성의 문제가 심각하기 때문에
	JAVA에서는 다중 상속을 지원하지 않으며, 해결 방법으로 인터페이스 기술을 제시하였다.
	

Event에서의 추상클래스와 인터페이스
	인터페이스를 지정받으면 모든 것을 구현해야 한다.
	하지만 굳이 모든 것을 구현하지 않고 원하는 것을 골라서 구현하고 싶을 때에는
	해당 인터페이스를 지정받은 추상클래스를 상속받은 후 재정의하여 구현한다.
	
	Interface -> Abstract Class -> Class
	         강제성	      강제성소멸
-----------------------------------------------
익명클래스 (Anonymous class)
	이름이 없는 클래스, 일회성 -> 재사용하지 않는다. 
	
GUI
	컨테이너 : 컴포넌틀르 배치할 수 있는 창
	컴포넌트 : 각 요소 (버튼, 텍스트 Area등)
	레이아웃 : 컴포넌트 배치방법
	이벤트 : 마우스 클릭 혹은 키보드 입력 시 구현해야할 메소드

	모든 이벤트를 구현하고자 할 때에는 인터페이스 구현,
	원하는 이벤트를 골라서 구현할 때에는 이벤트 인터페이스를 지정받은 
	추상클래스 구현.

---------------------------------------
마커 인터페이스

GUI
--------------------------------------------------
예외처리

API(배포, 임포트)

--------------------------------------------------
