day03>

접근권한 제어자 (접근자)
(보안이라기보다 개발자들끼리의 경고, 약속 같은 느낌)
	자료형 앞에 작성하여 영역관리를 할 수 있다. 

	default : 다른 패키지에서 사용할 수 없다. 
	pubilc : 모든 곳에서 사용할 수 있다(패키지 안에서 메인클래스 앞에 작성한다) 
	protected : 다른 패키지에서 사용할 수 없다. (자식이면 사용가능)
	private : 다른 클래스에서 사용할 수 없다. 

왜 굳이 getter setter를 써서 private을 사용하는가? -> JSP를 배워야 제대로 이해가된다.
왜 직접 접근을 막는가?

private을 사용하는 이유는 반드시 getter()와 setter()를 만들라는 경고다. 

jsp에서 변수를 호출할때 테그로 가는데 직접 호출하는 방법이없고,
메소드로만 호출 할 수 있다. 
그렇기 때문에, 화면단에서 쓰려면 getter(), setter()라는 메소드를 써야한다!
라고 경고를 해주기위해서 private을 사용하는 것이다. (자바빈즈 규칙)

-----------------------------------------------
추상클래스>
원래 클래스는 추상적이다.
하지만 보통 클래스는 필드들은 구체적으로 구현이 되어있다 (중괄호가있다.)

하지만 추상클래스는 필드들도 추상적이다.
	즉, 추상 메소드가 있다는 것이다.

추상메소드
	{} 바디가 존재하지 않는다. 즉 구현이 되어있지 않다. 
	세부적인 내용들이 정의되어 있지 않은 상태이다.

추상클래스 (불완전한 클래스)
	추상메소드가 한 개 이상이상 포함이 된다면, 클래스는 추상클래스로 선언해야한다.
	추상 메소드가 구체적으로 구현되기 전까지 메모리에 할당이될수가 없다. 
	구체적인 내용은 하위 클래스에서 재정의하여 구현한다. 
	자식에서는 반드시 구현해야 하기 때문에 이를 강제성이라고 한다. 
	(추상클래스는 클래스이기때문에 당연히 일반 메소드도 가질수있다)

추상클래스 선언
	abstract class 추상클래스명 {
		abstract 리턴타입 추상메소드명 ();
	}

---------------------------------------------
인터페이스













-----------------------------------------------
익명클래스

마커 인터페이스

GUI
--------------------------------------------------
예외처리

API(배포, 임포트)

--------------------------------------------------
