브라우저 객체 모델 (BOM)

자바스크립트를 이용하면 브라우저의 정보에 접근하거나 브라우저의 여러 기능들을 제어할 수 있다.
이 때 사용할 수 있는 객체 모델을 브라우저 객체 모델(BOM, Browser Object Model) 이라고 한다.
브라우저 객체 모델은 DOM과 달리 W3C의 표준 객체 모델은 아니다. (브라우저가 다 다르니까)
하지만 자바스크립트가 브라우저의 기능적인 요소들을 직접 제어하고 관리할 방법을 제공해준다.
이러한 BOM객체들을 전역 객체로 사용할 수 있다. (이미 선언이 되어있어서 전역에서 사용가능)

window 객체
	웹 브라우저의 창을 나타내는 객체로, 대부분의 웹 브라우저에서 지원한다.
	자바스크립트의 모든 객체, 전역함수, 전역 변수들은 자동으로 window객체의
	프로퍼티가 되고, window객체의 메소드는 전역함수, window객체의 프로퍼티는
	전역변수가 된다.
	DOM요소들도 모두 window객체의 프로퍼티가 된다.

	window라는 객체는 모든 JS의 객체들의 앞에 붙어있다.
	그냥 썼던 프로퍼티앞에 window. 이붙어야한다.
	하지만 그냥 썼던 것은 생략이 가능했어서이다. 
	(하지만, 앞에 명시적으로 써줘야할 경우도있다.)

window.onload
	html요소의 바디가 모두 로딩된 다음에 DOM을 사용해라! 라는 의미임

	사용법 : window.onload = function () { 여기 안에 dom }

	스크립트 언어는 위에서 아래로 해석되기 때문에 DOM에서 HTML 요소를
	추출할 때 body보다 위에 있으면 해석 순서에 오류가 생길 수 있다.
	이 경우 자바스크립트 문서를 밑으로 옮겨야 하는데, html 문서가 길어지면,
	가독성도 좋지 않고 불편할 수 있다. 따라서 window.onload를 사용하면
	문서가 준비된 상황 이후에도 발동시킬 수 있다. 

window.open() 메소드
	window 객체의 open() 메소드를 이용하면, 새로운 브라우저 창을 열 수 있으며,
	새로운 브라우저 창의 세부적인 옵션들도 일일이 설정할 수 있다.

	var 객체명 = window.open(url, name, specs, replace);
	※ 객체로 담는 이유 : 창을 닫아야하는데, 객체에 담아놓고 객체의 close를 사용하여
		원하는 창을 닫을수있다.
	1) 객체명 : 새로 만들어진 창 객체가 반환되고 창의 생성에 실패하면 null을 리턴한다.
		이 객체를 통해서 새 창을 제어할 수 있고,
		객체명.close();로 창을 닫을 수 있다. (열고 땡이아니라 열었으면 닫아줘야한다.)

	2) url : 창을 열었을때 이동할 주소명

	3) name : 이 창이 어디에 새롭게 열릴건지. (새창인지, 부포 프레임에 열릴건지,
		창이 열리는걸 알려줌)

		- _blank : 새창 (디폴트 값임)
		- _parent : 부모 프레임 (결제할때 결제창이 뜨는 경우가 예시.
				결제 완료를 누르면 부모창에서도 결제완료창으로 이동
				새롭게 열리는 창이 부모창에도)
		- _child : 현재 페이지의 자식페이지 (서브창)
		- _self : 현재 페이지

	4) specs : 선택적인 값으로 창의 크기, 스크롤 여부, 리사이즈 가능 등의 속성을 지정

		- height = 픽셀 : 창의 높이
		- width = 픽셀 : 창의 너비 
		등등.. 다양한 속성

	5) replace : 히스토리 목록에 새 항목을 만들지, 현재 항목을 대체할지 를 지정한다. 
		※히스토리 : 페이지 이동을 한 기록이다. 배열 형태로 저장된다. 
		클릭을 4번해서 4번이동하면 4칸 배열로 저장이 되는 것이다. 
		히스토리 목록에 새 항목을 만드는 것은, 그 배열에 한칸을 추가하는거고
		항목을 대체하는건 현재 배열칸에 덮어쓰는 것인지를 정하는 것임.
		-> true와 false 값으로 지정할 수있다.
		- true : 현재 히스토리 대체
		- false : 히스토리에 새 항목 만들기  

		(뒤로가기를 없애고 앞으로가기를 없앨때 사용함) 

window.setTimeout(function () {}, 밀리초); 
	적어놓은 밀리초만큼 멈췄다가 function이 실행된다.
	java의 sleep과 비슷함. 

-----------------------------------------------------------------------------------------------
location 객체 (자주쓰임)
	location 객체는 현재 브라우저에 표시된 HTML 문서의 주소를 얻거나,
	브라우저에 새 문서를 불러올 때 사용할 수 있다. 
	location객체의 프로퍼티와 메소드를 이용하면, 현재 문서의 URL 주소를
	다양하게 해석하여 처리할 수 있게 된다. 

	- href : 1.페이지의 URL 전체 정보 반환. 2.URL을 지정하여 페이지 이동 가능. 

	1. document.write(location.href); 		- 현재 페이지 정보 반환
	2. location.href = "주소 또는 파일 경로"; 	- 작성한 경로 페이지로 이동

	- pathname : URL 경로 부분의 정보를 반환한다. 

	- port : 포트번호를 반환한다.

	- reload () : 새로고침

	- assign () : 현재 URL을 지정한 URL로 바꿔 페이지 이동.

	- replace () : 현재 URL을 지정한 URL로 바꾸고 이전 페이지로 돌아갈 수 없게 한다.
	
	assign()과 replae()의 차이
		assign ()
			A페이지 - > B페이지 -> C페이지
						<-뒤로 가기시 B페이지로 이동. 
			=> 현재 URL을 지정한 URL로 가되

		replace()
			A페이지 - > B페이지 -> C페이지			
						<뒤로 가기 시 A페이지로 이동
			=> 뒤로가기를 없앨 때 사용한다. 





































