서버와 클라이언트
	- 클라이언트 : 서버에게 요청하는 것
	- 서버 : 요청받은 서비스를 제공(응답)해주는 것

웹 (Web)
	요청과 응답이 일어나는 장소
	웹개발자... 우리는 웹을 만드는자야? ㄴㄴ
	이러한 웹이라는 공간에서 개발을 하는 자들이 웹개발자!

웹 브라우저 (Web browser)
	사용자의 요청에 맞는 주소로 찾아가서 인터넷의 컨텐츠
	(문서와 그림, 멀티미디어 파일 등)을 검색 및 열람 후
	사용자에게 응답하기 위한 응용프로그램의 총칭이다. 
	주요 웹 브라우저로는 모질라 파이어폭스, 구글 크롬, 인터넷 익스플로어,
	마이크로스프트 엣지, 오페라, 사파리가 있다. 

프로토콜 (protocol)
	사람끼리 소통할 때 서로 이해할 수 있는 공용어를 사용해야 하듯이
	컴퓨터 끼리도 공용어를 사용해야 한다. 이러한 공용어를 원할하게 통신하기
	위해 필요한 규약을 프로토콜이라고 한다. 

	http:// (HyperText Transfer Protocol) 
	          클라이언트와 서버간의 웹페이지등의 자원을 통신하는 규약
	          텍스트로 통신하기 때문에 가로채어 본다면 누구든 내용을
	          볼 수 있다. 따라서 개발자들은 소스코드 내에서 암호화를 한다. 
	
	https:// (HyperText Transfer Protocol Secure Socket)
	          SSL (Secure Socket Layer) 프로토콜을 이용하여
	          자원을 공개키 암호화 방식으로 암호화해서 통신하는 규약.
	          서로 다른 키 2개가 존재하고 1번 키로 암호화 했다면
                      반드시 2번키로만 복호화 할 수 있다. 
	          SSL 인증서 구입 비용 및 갱신 비용이 발생하고 http에 비해서
	          서버에 부하가 더 많아진다. (금융권, 대기업에서 많이 사용됨)

IP (Internet Protocol)
	사람이 태어나면 출생신고를 하고 고유 번호인 주민번호를 발급받는다.
	이를 통해서 서로를 구분하듯, 네트워크 상에서 인터넷에 접속할 때
	다른 컴퓨터와 구별될 수 있도록 하는 고유 번호를 IP주소라고 한다. 
	
네이버 주소로 들어가기
	125.209.222.142

Domain
	IP주소는 기억하고 이해하기 힘들기 때문에 이를 위해서
	이름을 부여할 수 있도록 한 것.

WWW (World Wide web)
	인터넷에 연결된 전 세계 컴퓨터들을 통해 사람들이 정보를 공유할 수 
	있는 정보 공간

W3C (World Wide Web Consortium)
	월드 와이드 웹을 위한 표준을 제정하고 관리하는 중립적인 기관이다. 

-대표적인 웹 표준 언어
1. HTML (HyperText Markup Language)
	- 프로그래밍 언어가 아니다 마크업 언어다.
	- 웹페이지에서 다른 페이지로 이동할 수 있도록 하는 마크업 언더이다.
	- 또한 정보에 특정 표시를 해줄 수 있는 언어이다. 
	- 마크업 언어란 테그 방법 체계를 의미하며, 테그 등을 이용하여 문서나
	데이터의 구조를 기술하는 언어이다.

2. CSS (Cascading Style Sheets)
	- cascading : 위에서 아래로. 즉 순서가 정해져있다. 
	- 구체적으로 어떤 스타일로 요소가 표시되는 지를 정하는 규격이다.
	- HTML로 문서를 구조화 하는 것 뿐만 아니라 꾸미기도 할 수 있지만,
	- 동일한 디자인을 사용한 문서가 여러 개 있다면 변경 시 모두 하나씩
	- 수정해야 하기 때문에 불편하다. 
	- CSS는 이런 문제를 해결함과 동시에 웹 페이지에서 내용과 스타일을
	분리하고 역할도 분리해준다. (분업가능) 

3. XHTML (Extensible HTML)
	- 기존에 사용되던 HTML 규격이 가진 문제점을 극복하고,
	보다 다양한 분야에 응용될 수 있도록 해주는 여러가지 확장된 기능을 포함한다.
	- 하지만 XML기반으로 만들어졌기 때문에 지원되지 않는 브라우저도 있다. 
	- 따라서 HTML과 XHTML은 사실상 큰 차이가 없이 사용된다. 

4. XML (동석갓의 가장 중요하다고 생각하는 것. 중요함!) (Extensible Markup Language)
	- 마크업 언어를 확장시킨 언어.
	- 데이터 전달, 세부 설정 2가지 목적으로 많이 사용됨 
	- 예) <id>hds</id>  : id라고 정보를 전달하는것
	- 어떠한 데이터를 설명하기 위해 임의로 지은 테그로 데이터를 감싼다.
	- 테그로 데이터를 설명하며, 이것이 데이터의 표시(Markup)가 되고
	추가적인 데이터가 생기면 테그 추가와 테그 내부 내용 추가를 할 수 있다.
	- 따라서 데이터 전달과 세부 설정에 목적이 있다.
	ex>
	<? xml version = "1.0"?>
	<컴퓨터 언어>
		<C언어> C <C언어>
		<자바> JAVA </자바>
		<파이썬> Python </파이썬>
	</컴퓨터 언어>


--------------------------------------------------------------------------------------------
웹 접근성
	모든 사용자가 신체적, 환경적 조건에 관계없이 웹에 접근하여 이용할 수 
	있도록 보장하는 것을 의미한다. 
	예> 마우스가 없는 환경이나 키보드만을 조작해야할 경우, 
	     신체적 장애로 인해 특수한 환경하에 접속을 해야하는 경우,
	     브라우저별, 모바일 환경에서 접속해야하는 경우와 같이 다양한 플랫폼
	     에서도 정보 제공이 다름이 없어야 한다는 것이다. 
	     모든 사람이 평등하게 정보가 제공되어야 한다는 것 ! 

---------------------------------------------------------------------------------------------
톰캣 설치
	- 톰캣은 서버다. 
	- 웹서버와 웹컨테이너 사이에서 중간 관리를 해서 웹컨테이너를 깨우는 친구가
	WAS라는 것이다. WAS로 인해 웹 서버와 웹 컨테이너를 관리한다. 
	웹어플리케이션 서버. 바로 이 WAS가 톰켓이다. 
	웹서버는 아파치라고한다. 

	구글에 tomcat 검색
	> download 링크 클릭
	> 8.5버전 zip파일 설치
	>c 드라이브에 압축풀기 

---------------------------------------------------------------------------------------------














