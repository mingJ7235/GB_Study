URL : L (LOCATION) 사용자의 요청과 그에 맞는 응답을 주소로 나타낸 부분 
	항상 페이지로 나타내진다. 브라우저 열고 url 때려봐!! 
URI : I 사용자의 요청을 대표하는 데이터 혹은 응답에 대한 데이터를 나타낸 부분.
	데이터로 나타내진다. 

URL, URI가 개발쪽에는 큰 차이가 없는데, 이론쪽에는 차이가 있다.  (url이 uri 보다 조금 더 큰 개념이다.)

REST (Representational State Transfer)
	: 대표하는 상태를 전송하는 것... 오.. 이해가안됨 
	=> "하나의 URI는 하나의 고유한 리소스를 대표하도록 설계된다. "
	예) /board/123 -> 이건 uri다. 123은 디렉토리가 아니라 데이터다. 

	url, uri를 입력해서 엔터를 쳐서 나오는 것을 봐야 알았지만,
	rest는 경로만 보아도 알아야한다. 
	REST방식없이 설계를 하면 엔터를 쳐봐야 URL인지URI인지 판단해야한다.
	REST방식으로 설계를 하면 주소를 보고 유추가 가능하다. 

	/board/123 -> URI 라고 유추가 된다. 게시글 중 123번 

왜 REST를 사용하는가? REST로 설계하는 이유
	1. 데이터 통신에 제약이 없다.
		설정조차 없다. 서버만 있다면 무조건 할 수 있는 방식이다. 	
		통신에 대한 편의성

	2. 데이터 소켓 경량화 (데이터 담겨진 곳이 경량화되어 전송된다.)

	3. 다른 서버끼리도 데이터를 주고 받을 수 있다. 

**REST와 request와 비교를 해줘야한다. 
	request는 header에 담겨서 가는것과 REST와 차이가 무엇인지를 알아야한다. 
	request를 다른 서버로 보내려면 해당 url을 그 서버에 맞게 변경해줘야하고, 번거롭다. 
	이러한 번거로운 설정이 REST를 사용하면 필요없다. 
	우리는 데이터!!를 받기위함이니까 페이지가아니라!!
	REST를 통해 데이터만 받으면된다. 
	굉장히 중요한부분이다!
	
	







복습>
Reply service, impl, test 서버에서 실험하기 , 