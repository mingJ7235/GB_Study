파일 업로드 방식
	
	- <form>태그를 이용하는 방식 -> 화면이동을 하는 방법

	- Ajax를 이용하는 방식 

	- <iframe>을 이용하여 화면의 이동 없이 첨부파일을 처리하는 방식 (이건 잘 안쓴다)
		* iframe은 브라우저안에 또다른 브라우저를 띄우는 법. 하지만 많은 랜더링이 쓰여서 느리다
		* 또한 보안 때문에 막아놓은 사이트들이 많다. 즉, 잘안쓰인다. 

파일 업로드 API

	- cos.jar (jsp 프로젝트때 썼던 API)
		* 2002년도 이후로 더이상 이 라이브러리 업데이트가 안되었음
		* 즉, 구형 api다. 개발이 종료되었다. 더 이상 사용하지 않는 것을 권장함.

	- commons-fileupload
		* 일반적으로 많이 활용되며, 서블릿 3.0 이전에도 사용 가능

	- 서블릿 3.0 이상 부터는 API상에서 그냥 지원이된다. 즉, 포함이 되어있다. 
		* 즉, 라이브러리를 쓰지 않고도 multipart를 사용해서 첨부파일을 사용할 수 있다. 
		* 서블릿 버전을 올리면 사용가능하다. 

---------
수정내역 
web.xml 
	- 4번째 라인 수정 -> 
	- version 수정 및 29번째 라인~ 파일 업로드 할 수 있는 설정들 

servlet-context도 설정해줘야한다 -> 
	- multipartresolver 객체를 만들어줘야한다. 

------------

서블릿은 사용자의 요청. 즉 이 서블릿을 통해 url로 요청이 들어온다.
서블릿 설정을 통해 멀티파트 객체를 가져올 수 있도록 함 

-------------
Ajax 사용 하는 법 

-------------

 

* 문제점 및 해결 방안

1. 동일한 이름으로 파일이 업로드 되었을 때 기존 파일이 사라지는 문제 (덮어 씌워진다.)

2. 첨부파일 공격에 대비하기 위한 업로드 파일의 확장자 제한 
		-> 정규식 사용 (반복문보다 훨씬 빠르다)

3. 이미지 원본 파일 용량이 큰 경우 썸네일 이미지를 생성해야 한다. 

4. 이미지 파일과 일반 파일을 구분해서 다운로드를 처리해야 하는 문제 














