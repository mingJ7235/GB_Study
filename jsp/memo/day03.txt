Ajax (Asynchronous (비동기식) JavaScript and Xml)
	※JS, XML는 동기식인데, Ajax는 비동기식으로 바꿔주는것
	빠르게 동작하는 동적인 웹 페이지를 만들기 위한 개발 기법이다.
	Ajax는 웹 페이지 전체를 다시 리로딩하지 않고도, 웹 페이지의
	일부분만을 갱신할 수 있고 백그라운드 영역에서 서버와 통신하여,
	그 결과를 웹페이지의 일부분에만 표시할 수 있다.
	이 때 서버와 여러 데이터를 주고 받을 수 있다. 

	- JSON
	- XML
	- HTML
	- 텍스트 등

Ajax의 장점
	1. 웹 페이지 전체를 다시 로딩하지 않고도, 웹 페이지의 일부분만을 갱신할 수 있다.
	2. 웹 페이지가 로드된 후에 서버로 데이터 요청을 보내거나 받을 수 있다. (핵심)
		※회원가입페이지로 갔는데 그 페이지에서 또 아이디 중복확인 페이지로 데이터요청할수있다는것
	3. 다양한 UI (동적 페이지) 구현이 가능해진다. 

Ajax의 단점
	1. 페이지 이동이 없기 때문에 히스토리 관리가 안된다.  
	2. 반복적인 데이터를 요청하면 느려지거나 작동하지 않게 된다. 
	3. 페이지 이동이 없다는 것은 보안상의 문제도 발생할 수 있다는 것이다. 

Ajax 구성 요소
	- 웹 페이지의 표현을 위한 HTML과 CSS
	- 데이터에 접근하거나 화면 구성을 동적으로 조작하기 위해 사용되는 DOM모델
	- 데이터 교환을 위한 JSON이나 XML
	- 웹 서버와의 비동기식 통신을 위한 XMLHttpRequest 객체를 사용
	- 위에서 언급한 모든 기술을 결합하여 사용자의 작업 흐름을 제어하는 데 사용되는 자바스크립트

XMLHttpRequest 객체
	Ajax의 가장 핵심적인 구성요소는 바로 XMLHttpRequest 객체다.
	Ajax에서 XMLHttpRequest객체는 웹 브라우저가 서버와 데이터를 교환할 때 사용된다. 
	웹 브라우저가 백그라운드에서 계속해서 서버와 통신할 수 있는 것은 바로 이 객체를
	사용하기 때문이다. 

XMLHttpRequest 객체 생성
	var 객체명 = new XTMLHttpRequest();









































